package net.sharksystem.sharknet.android;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.EditText;
import android.widget.Toast;

import net.sharksystem.R;
import net.sharksystem.SharkException;
import net.sharksystem.messenger.android.SNChannelsListActivity;
import java.io.IOException;

/**
 * Initial Activity which is the entry point of the Shark Messenger application
 */
public class InitActivity extends Activity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        //Log that the SharkMessenger was started the first time
        Log.d(this.getLogStart(), "Shark Messenger was started!");

        //check if this start is the first one ever on this device
        try {
            //if the owner id is already present, the user already entered it, so this can't be
            //  the first start
            //if this call throws an exception, then this is in fact the first start, so in the
            //  catch block this case is treated. To be concise: this could actually be the second
            //  or further time this app was started, as the user may cancelled the app before
            //  setting his name, so the owner id is still not set. When the owner id was confirmed,
            //  any further starts aren't counting as initial first start ever again.
            String ownerID = SharkNetApp.getOwnerID(this);
            this.initializeSystem(ownerID);

        } catch(SharkException se) {
            Log.d(this.getLogStart(), getString(R.string.activity_init_first_time_log) +
                    se.getLocalizedMessage());

            //as this is the first start, the owner id was never set before. This needs to be done
            //  now. It's done within this activity by displaying the therefor intended layout
            setContentView(R.layout.init);
        }
    }

    private void initializeSystem(String ownerID) {
        try {

            /* This code will almost certainly be removed in a later step. Differentiating between
                the first and any other launch isn't necessary anymore
            //if it's the first launch ever
            boolean veryFirstLaunch = false;
            if(ownerID == null) {
                veryFirstLaunch = true;
                ownerID = SharkNetApp.getOwnerID(this);
            }
             */

            //core initialization
            SharkNetApp.initializeSharkNetApp(this, ownerID);
            Log.d(this.getLogStart(), "Shark system was initialized. The main Shark Messenger Activity is started now.");


            /*
                TODO: this code isn't necessary:
                 1. at the end, there should be one app which includes all functionality
                 2. opening channels and sending messages can be done without exchanging
                    certificates, as you can send information to anyone.

            if it's the first launch, then always open the OwnerActivity next
            else wise, the next activity is chosen by the following "switch"
            Class<?> firstActivity = veryFirstLaunch ? OwnerActivity.class : SNChannelsListActivity.class;
            Class<?> firstActivity = veryFirstLaunch ? OwnerActivity.class : SNTestActivity.class;
            Class<?> firstActivity = veryFirstLaunch ? OwnerActivity.class : PersonListViewActivity.class;
            Class<?> firstActivity = veryFirstLaunch ? OwnerActivity.class : SettingsActivity.class;
            Class<?> firstActivity = veryFirstLaunch ? OwnerActivity.class : CredentialExchangeActivity.class;

             */


            this.finish();

            //launch main Shark Messenger activity
            Intent intent = new Intent(this, SNChannelsListActivity.class);
            this.startActivity(intent);
        }
        catch(SharkException se) {
            Log.e(this.getLogStart(), "cannot initialized app - fatal: "
                    + se.getLocalizedMessage());
            se.printStackTrace();
            Toast.makeText(this, "internal fatal error: cannot launch system",
                    Toast.LENGTH_LONG).show();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called when the user wants to save his owner id and can therefor only be
     * invoked, when it was the first time, the user opened this app.
     */
    public void onSaveClick(View view) {
        //Read string from text field
        EditText ownerNameEditText = this.findViewById(R.id.initOwnerName);
        String ownerName = ownerNameEditText.getText().toString();

        try {
            //now initialize
            SharkNetApp.initializeSystem(this, ownerName);
            //even though, the ownerId was generated by the above function, pass null to distinguish
            //  between first and second or higher start
            this.initializeSystem(null);

        } catch (SharkException e) {
            Toast.makeText(this, e.getLocalizedMessage(), Toast.LENGTH_SHORT).show();
        }
    }

    /**
     * Returns the log identifier for this class. It is for logging purposes only
     * @return the identifying tag for this class
     */
    private String getLogStart() {
        return "SharkMessenger InitActivity";
    }
}

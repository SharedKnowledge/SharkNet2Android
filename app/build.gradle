apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "net.sharksystem"
        minSdkVersion 23
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
    productFlavors {
    }
}

dependencies {
    // AndroidX
//    https://developer.android.com/jetpack/androidx
    //    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation 'com.android.support:support-v4:27.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'

    // testing with espresso
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // implementation files('libs/AASP_Engine_0.2.0.jar')

    // add AASP Engine for storing of data - included in makan-lib
    // implementation files('libs/AASP_Engine_0.3.0.jar')
    implementation files('libs/MakanJava.jar')

    // https://developer.android.com/studio/projects/android-library
    // import AASP Android Service to actually exchange AASP messages
    implementation project(":AASP_Android_Service_0.1.0")

    // for better log Timber lib
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // CardView
    implementation 'com.android.support:cardview-v7:27.1.1'

    // Room components
    implementation "android.arch.persistence.room:runtime:$rootProject.roomVersion"
    annotationProcessor "android.arch.persistence.room:compiler:$rootProject.roomVersion"
    androidTestImplementation "android.arch.persistence.room:testing:$rootProject.roomVersion"

    // Lifecycle components
    implementation "android.arch.lifecycle:extensions:$rootProject.archLifecycleVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$rootProject.archLifecycleVersion"

    // Gson convert Java Objects into their JSON representation
    implementation 'com.google.code.gson:gson:2.8.6'

    // recyclerview
    implementation 'com.android.support:recyclerview-v7:27.0.0'

    // ButterKnife for view binding
//    implementation 'com.jakewharton:butterknife:10.0.0'
//    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'

    // Todo put that in readMe maybe?
    // connect via wifi
    // https://stackoverflow.com/questions/33726622/how-to-debug-in-android-studio-using-adb-over-wifi#targetText=You%20can%20use%20Android%20Wifi,%2Fsdk%2Fplatform%2Dtools.&targetText=Step%204%3A%20Execute%20command%20adb,e%20shell%20(for%20emulator).
    // connect multiple devices
    // https://android.stackexchange.com/questions/137613/android-wireless-debugging-on-multiple-devices adb debugging im geraet zulassen!!

}
